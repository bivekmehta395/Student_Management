import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.Properties;
import java.util.Vector;
import javax.mail.Authenticator;
import javax.mail.Message;
import javax.mail.MessagingException;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;



/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */



/**
 *
 * @author himalayan darsan college
 */
public class submitted extends javax.swing.JFrame {

	/**
	 * Creates new form submitted
	 */
	public submitted() {
		initComponents();
	}
	public submitted(String marks) {
		initComponents();
		String mark="Mark obtained:" +marks;
		jLabel2.setText(mark);
	}
        
        
        

	/**
	 * This method is called from within the constructor to initialize the
	 * form. WARNING: Do NOT modify this code. The content of this method is
	 * always regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton2 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(0, 0));
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 60)); // NOI18N
        jLabel2.setText("Marks Obtained:10");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(371, 286, -1, -1));

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 60)); // NOI18N
        jLabel3.setText("Successfully Updated");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(355, 408, -1, -1));

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quiz/Close.png"))); // NOI18N
        jButton2.setText("\n");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(649, 18, -1, -1));

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/quiz/pages background student.jpg"))); // NOI18N
        jLabel1.setText("jLabel1");
        jLabel1.setMaximumSize(new java.awt.Dimension(1500, 768));
        jLabel1.setPreferredSize(new java.awt.Dimension(1370, 720));
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(-20, 0, -1, -1));

        pack();
    }// </editor-fold>//GEN-END:initComponents

        private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
                // TODO add your handling code here:
		setVisible(false);
		new index().setVisible(true);
        }//GEN-LAST:event_jButton2ActionPerformed

	/**
	 * @param args the command line arguments
 */
        
        
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(submitted.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(submitted.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(submitted.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(submitted.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new submitted().setVisible(true);
            }
        });

        Vector<Vector<Object>> data = new Vector<Vector<Object>>();
        try {
            Class.forName("com.mysql.jdbc.Driver");
            Connection connection = DriverManager.getConnection("jdbc:mysql://localhost:3306/mysql6", "root", "i1love2my3brother@"); // Replace with your database connection details
            Statement stmt = connection.createStatement();
            ResultSet rs = stmt.executeQuery("SELECT * FROM studentdetail"); // Replace with your table name
            while (rs.next()) {
                Vector<Object> v = new Vector<Object>();
                v.add(rs.getString("rollnumber"));
                v.add(rs.getString("name"));
                v.add(rs.getString("fathername"));
                v.add(rs.getString("mothername"));
                v.add(rs.getString("gender"));
                v.add(rs.getString("number"));
                v.add(rs.getString("email"));
                v.add(rs.getInt("mark"));
                data.add(v);
            }
            rs.close();
            stmt.close();
            connection.close();
        } catch (Exception e) {
            e.printStackTrace();
        }

        // Find the highest marks
        int highestMarks = -1;
        for (Vector<Object> studentData : data) {
            int marks = (int) studentData.get(8); // Assuming marks are stored at index 7
            if (marks > highestMarks) {
                highestMarks = marks;
            }
        }

        // Send email to the student with the highest marks or equal to the highest marks
        for (Vector<Object> studentData : data) {
            int marks = (int) studentData.get(8); // Assuming marks are stored at index 7
            String email = (String) studentData.get(7); // Assuming email is stored at index 6
            if (marks == highestMarks) {  
                                // Compose the email message
                String subject = "Congratulations! You have achieved the highest marks.";
                String message = "Dear " + studentData.get(1) + ",\n\n" // Assuming name is stored at index 1
                        + "Congratulations! You have achieved the highest marks in the class.\n"
                        + "Your details are as follows:\n\n"
                        + "Roll Number: " + studentData.get(0) + "\n" // Assuming roll number is stored at index 0
                        + "Name: " + studentData.get(1) + "\n"
                        + "Father's Name: " + studentData.get(2) + "\n" // Assuming father's name is stored at index 2
                        + "Mother's Name: " + studentData.get(3) + "\n" // Assuming mother's name is stored at index 3
                        + "Gender: " + studentData.get(4) + "\n" // Assuming gender is stored at index 4
                        + "Contact Number: " + studentData.get(5) + "\n" // Assuming contact number is stored at index 5
                        + "Email: " + studentData.get(6) + "\n"
                        + "Marks: " + studentData.get(7) + "\n\n"; // Assuming marks is stored at index 7

                // Send the email
                submitted.sendEmail(email, subject, message);
            }
        }
    
    }
    // Method to send email using JavaMail API
    public static void sendEmail(String toEmail, String subject, String message) {
        final String fromEmail = "bivekmehta9@gmail.com"; // Replace with your email address
        final String password = "hsjluromdbsmlsvc"; // Replace with your email password

        Properties props = new Properties();
        props.put("mail.smtp.auth", "true");
        props.put("mail.smtp.starttls.enable", "true");
        props.put("mail.smtp.host", "smtp.gmail.com"); // Replace with your email provider's SMTP host
        props.put("mail.smtp.port", "587"); // Replace with your email provider's SMTP port

        Session session = Session.getInstance(props, new Authenticator() {
            protected PasswordAuthentication getPasswordAuthentication() {
                return new PasswordAuthentication(fromEmail, password);
            }
        });

        try {
            Message emailMessage = new MimeMessage(session);
            emailMessage.setFrom(new InternetAddress(fromEmail));
            emailMessage.setRecipients(Message.RecipientType.TO, InternetAddress.parse(toEmail));
            emailMessage.setSubject(subject);
            emailMessage.setText(message);
            Transport.send(emailMessage);
            System.out.println("Email sent to: " + toEmail);
        } catch (MessagingException e) {
            throw new RuntimeException(e);
        }
    }

            

    

                
                
            
	

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    // End of variables declaration//GEN-END:variables

}
